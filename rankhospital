rankhospital<-function(state,outcome,num)
{
  carepre<-data.frame()
  carestate<-data.frame()
  carestatecausaorder<-data.frame()
  
  
  
  ##Read the data frame with the columns class character and na.strings, it last because in the
  ## some columns put Not Available and not NA, na.string is use for interpreted Not Ava...
  care<-read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",colClasses = "character", na.strings = "Not Available")
  
  ##I call function best for check var state and outcome is correct
  checkarguments<-best(state,outcome)
  
  ## Create dataframe where var state is equal field State
  carestate<-subset(care,subset=State==state)
 
  
  
  
  
  if(outcome=="heart attack")
  {
    ## Delete all NA ( in this case Not Available) from column Hospital.30.Day.Death..Mortality..Attack
    ## I do this, because the case "worst" or last for this colunm, NA is not contabilite
    carestate<-carestate[!(is.na(carestate$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
    
    ## How the columns dataframe is character, for that order correct colunm 11,put function as.numeric
    ## else the ordering is not correct, for exemple 10.0 put as lower that 8.1
    carestate[,11]<-as.numeric(carestate[,11])
    
    ## ordering dataframe ascendent for column 11 and 2
    carestatecausaorder<-carestate[order(carestate[,11],carestate[,2]), ]
    numfilas<-nrow(carestatecausaorder)
    
    if(num<=numfilas)
    {
      hospranking<-carestatecausaorder[num,2]
    }
    else if(num=="best")
    {
      hospranking<-carestatecausaorder[1,2]
    }
    else if(num=="worst")
    {
      hospranking<-carestatecausaorder[numfilas,2]
    }
    else
    {
      
      return (NA)
    }
    
  }
  
  if(outcome=="heart failure")
  {
    ## Delete all NA ( in this case Not Available) from column Hospital.30.Day.Death..Mortality..Failure
    ## I do this, because the case "worst" or last for this colunm, NA is not contabilite
    carestate<-carestate[!(is.na(carestate$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
    
    carestate[,17]<-as.numeric(carestate[,17])
    carestatecausaorder<-carestate[order(carestate[,17],carestate[,2]), ]
    
    numfilas<-nrow(carestatecausaorder)
    
    if(num<=numfilas)
    {
      hospranking<-carestatecausaorder[num,2]
    }
    else if(num=="best")
    {
      hospranking<-carestatecausaorder[1,2]
    }
    else if(num=="worst")
    {
      hospranking<-carestatecausaorder[numfilas,2]
    }
    else
    {
      
      return (NA)
    }
    
  }
  
  if(outcome=="pneumonia")
  {
   
    ## Delete all NA ( in this case Not Available) from column Hospital.30.Day.Death..Mortality..Pneom
    ## I do this, because the case "worst" or last for this colunm, NA is not contabilite 
    carestate<-carestate[!(is.na(carestate$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
    carestate[,23]<-as.numeric(carestate[,23])
    carestatecausaorder<-carestate[order(carestate[,23],carestate[,2]), ]
    numfilas<-nrow(carestatecausaorder)
    if(num<=numfilas)
    {
      hospranking<-carestatecausaorder[num,2]
    }
    
    else if(num=="best")
    {
      hospranking<-carestatecausaorder[1,2]
    }
    else if(num=="worst")
    {
      hospranking<-carestatecausaorder[numfilas,2]
    }
    else
    {
      return (NA)
    }
  }
  hospranking
  
}
